
使用TELNET手工操作 SMTP/POP 收发邮件: http://tanghaibo001.blog.163.com/

========nslookup是域名查找服务 =============
[@localhost]$ nslookup -type=mx gmail.com             #指名要查找的是gmail邮件服务

=========先计算BASE64编码的用户名密码，认证登录需要用到===========
#Perl base64编码
[@localhost]$ perl -MMIME::Base64 -e 'print encode_base64("crazywill");'
Y3Jhenl3aWxs
[@localhost]$ perl -MMIME::Base64 -e 'print encode_base64("mypassword");'
bXlwYXNzd29yZA==

#Python base64编码
base64模块是用来作base64编码解码的。这种编码方式在电子邮件中是很常见的. 它可以把不能作为文本显示的二进制数据编码为可显示的文本信息。编码后的文本大小会增大1/3
base64模块真正用的上的方法有四组，分别是
1. encode,decode一组，专门用来编码和解码文件的,也可以对StringIO里的数据做编解码；
2. encodestring,decodestring一组，专门用来编码和解码字符串； 
3. b64encode和b64decode一组，用来编码和解码字符串，并且有一个替换符号字符的功能。这个功能是这样的：因为base64编码后的字符除了英文字母和数字外还有三个字符 + / =,其中=只是为了补全编码后的字符数为4的整数，而+和/在一些情况下需要被替换的，b64encode和b64decode正是提供了这样的功能。至于什么情况下+和/需要被替换，最常见的就是对url进行base64编码的时候。
4. urlsafe_b64encode和urlsafe_b64decode 一组，这个就是用来专门对url进行base64编解码的，实际上也是调用的前一组函数。

>>> import base64
>>> print base64.b64encode("crazywill")
>>> print base64.b64encode("mypassword")


======================开始SMTP发信操作==========================

[@localhost]$ telnet smtp.163.com 25                #telnet登录25端口: telnet smtp.163.com 25
Trying 202.108.5.81...
Connected to smtp.163.com.
Escape character is '^]'.
220 163.com Coremail SMTP(Anti Spam) System
EHLO smtp.163.com                                   # 握手: EHLO smtp.163.com
250-mail
250-PIPELINING
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
AUTH LOGIN                                          # 开始认证登录: AUTH LOGIN
334 dXNlcm5hbWU6
Y3Jhenl3aWxs                                        # 使用base64编码的用户名
334 UGFzc3dvcmQ6
bXlwYXNzd29yZA==                                    # 使用base64编码的密码
235 Authentication successful                       # 使用Base64编码则成功登录
MAIL FROM:<test@163.com>                            # 邮件发送方
553 You are not authorized to send mail, authentication is required          # 不可伪造发送邮件  
MAIL FROM:<crazywill@163.com>                       # 邮件发送方:MAIL FROM:<crazywill@163.com>
250 Mail OK
RCPT TO:<crazywill@163.com>                         # 邮件的接收方，若有多个收件人，则重复这一语句多次: RCPT TO:<crazywill@163.com>
250 Mail OK
DATA                                                # 邮件体内容: DATA
354 Please start mail input.
TO: crazywill@163.com                               # 此处的TO，FROM，等内容，可以随便造假, 可以骗人但骗不了懂得查看邮件源码的
FROM: cccc@163.com
SUBJECT: test by telnet/smtp

test, just a test.                                  # 邮件正文内容，与Header部分空一行开始写
.                                                   # 邮件写完，以一个句点加回车结束
250 Mail OK queued as smtp10,wKjADQ2ApxRnnqBE0CWaEw==.38326S3   # 返回250 表示发送成功。
NOOP                                                            # 空语句，不执行任何操作，一般用来保持和服务器连接，不要掉线
250 OK
QUIT                                                            # 退出
221 Closing connection. Good bye.
Connection closed by foreign host.


======================开始POP3收信操作==========================

[@localhost]$ telnet pop.163.com 110                #telnet登录110端口: telnet pop.163.com 110
Trying 202.108.5.104...
Connected to pop.163.com.
Escape character is '^]'.
+OK Welcome to coremail Mail Pop3 Server (163com[20050206])
USER crazywill                                      # 用户名: USER crazywill, 不需base64编码
+OK core mail
PASS mypassword                                     # 登录密码: PASS mypassword, 不需base64编码
+OK 254 message(s) [27676669 byte(s)]
STAT                                                # 查看邮箱状态, 254封邮件及总大小
+OK 254 27676669
LIST                                                # 邮件列表, 每一封邮件大小
+OK 254 27676669
1 2468
2 21945
3 33136
4 2071
5 3364
6 18906
7 3136
8 24764
.................

TOP 254  0                                           # 查看指定邮件的邮件头，0表示查看整个邮件头，其它正整数表示限制返回多少行。
+OK core mail
Received: from smtp.63.com (unknown [58.252.70.158])
        by smtp5 (Coremail) with SMTP id wKjREDrA9gIfFqlEjCnRAg==.29062S4;
        Mon, 03 Jul 2006 21:07:18 +0800 (CST)
TO: crazywill@163.com
FROM : cccc@163.com                                   # 这里即前面发信时伪造的一个假发送人信息，平时正常操作只显示这个。
SUBJECT: test by telnet/smtp                          # 邮件主题
Message-Id: <44A91687.0E6F6C.07562>
Date: Mon, 3 Jul 2006 21:07:19 +0800 (CST)
Sender: crazywill@163.com                             # 这里是真正的发送人，不可伪造。


.
RETR 254                                              # 获取指定邮件
+OK 354 octets
Received: from smtp.63.com (unknown [58.252.70.158])
        by smtp5 (Coremail) with SMTP id wKjREDrA9gIfFqlEjCnRAg==.29062S4;
        Mon, 03 Jul 2006 21:07:18 +0800 (CST)
TO: crazywill@163.com
FROM : cccc@163.com
SUBJECT: test by telnet/smtp
Message-Id: <44A91687.0E6F6C.07562>
Date: Mon, 3 Jul 2006 21:07:19 +0800 (CST)
Sender: crazywill@163.com

test, just a test.
.

DELE 254                                               # 删除第254封邮件
+OK core mail
STAT                                                   # 查看邮箱状态
+OK 253 27676315
QUIT                                                    # 退出
+OK core mail
Connection closed by foreign host.


===============================================================


IMAP 协议收信与POP收信有很大的不同，最明显的一点就是发送的每条命令(命令是不区分大小写的)，前面都要带有一个标签/标志，发送一条命令后可以紧接着发送另一条命令，服务器端返回命令处理结果的顺序是未知的，取决于各条命令的执行时间。所以返回的结果中，将带有所发送命令的标签。如下面示例中的 A01, A02 等等。


[@localhost]$ telnet 192.168.0.1 143        #telnet登录IMAP协议的143端口
Trying 192.168.0.1...
Connected to xxxxxx
Escape character is '^]'.
* OK xxxxxxx System IMap Server Ready
A01 LOGIN abc 123                           #用户登录
A01 OK LOGIN completed
A02 LIST "" *                               #列出所有信箱列表
* LIST () "/" "INBOX"
* LIST () "/" "Drafts"
* LIST () "/" "Sent Items"
* LIST () "/" "Trash"
* LIST () "/" "Junk E-mail"
* LIST () "/" "Virus Items"
* LIST () "/" "&XfJT0ZABkK5O9g-"
* LIST () "/" "&g0l6Pw-"
* LIST () "/" "&XfJT0ZABkK5O9g-/DailyReport"
* LIST () "/" "Jira"
* LIST () "/" "Admin"
* LIST () "/" "&V4NXPpCuTvY-"
A02 OK LIST Completed
A03 Select INBOX                            #选择收件箱
* 37 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 1] UIDs valid
* FLAGS (\Answered \Seen \Deleted \Draft)
* OK [PERMANENTFLAGS (\Answered \Seen \Deleted \Draft)] Limited
A03 OK [READ-WRITE] SELECT completed
A04 Search ALL                              #查询收件箱所有邮件
* OK X-SEARCH in progress
* OK X-SEARCH in progress
* OK X-SEARCH in progress
* SEARCH 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
A04 OK SEARCH completed                     #列出符合条件的邮件序号(ALL表示列出当前信箱INBOX中的所有邮件)
A05 Search new                              #查询收件箱所有新邮件
* OK X-SEARCH in progress
* OK X-SEARCH in progress
* OK X-SEARCH in progress
* SEARCH
A05 OK SEARCH completed                     #找不到任何新邮件
A06 Fetch 5 full                            #获取第5封邮件的邮件头
* 5 FETCH (INTERNALDATE "27-Jun-2006 14:00:27 +0800" FLAGS (\Seen) ENVELOPE ("Tue, 27 Jun 2006 13:56:51 +0800" "test " (("xxxxxx" NIL "xxxx" "xxxxxx")) (("xxxxxx" NIL "xxxx" "xxxxxx")) (("xxxxxx" NIL "xxxx" "xxxxxx")) ((NIL NIL "xxx" "xxxxx")) NIL NIL NIL "<000f01c699ae$7c5014a0$6b01a8c0@xxxxxx.xx>") BODY (("text" "plain" ("charset" "gb2312") NIL NIL "base64" 14 2) ("text" "html" ("charset" "gb2312") NIL NIL "base64" 420 7) "alternative") RFC822.SIZE 1396)
A06 OK Fetch completed
A07 Fetch 5 rfc822                          #获取第5封邮件的完整内容
* 5 FETCH (RFC822 {1396}
[这里是邮件内容，太长，略...]
A07 OK Fetch completed
A08 Fetch 5 flags                           #查询第5封邮件的标志位
A08 OK Fetch completed
A09 Store 5 +flags.silent (\deleted)        #设置标志位为删除
A09 OK STORE completed
A10 Expunge                                 #永久删除当前邮箱INBOX中所有设置了\deleted标志的信件
A10 OK EXPUNGE completed
A11 noop                                    #空语句
A11 OK NOOP completed


A20 LOGOUT                                  #退出
* BYE IMAP4rev1 Server logging out
A20 OK LOGOUT completed
Connection closed by foreign host.



===============================================================
用open ssl登陆 gmail 邮箱
if you want to connect to a pop3 SSL server use the following command on a linux shell, instance for gmail it is :
[@localhost]$ openssl s_client -connect pop.gmail.com:995
USER ....
PASS ....
STAT ....
LIST ....
TOP 254  0
RETR 254
DELE 254
QUIT




